<?xml version="1.0" encoding="utf-8"?><SealSecurity xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><ProviderName>Database Authentication</ProviderName><UseCustomScript>true</UseCustomScript><Script>@using System.Data&#xD;
@using System.Data.Common&#xD;
@{&#xD;
    SecurityUser user = Model;&#xD;
	//Database authentication script: use the user name and password to authenticate the user and set his name and security groups...&#xD;
	//user.WebUserName -&gt; user name from the login screen&#xD;
	//user.WebPassword -&gt; password from the login screen&#xD;
&#xD;
	user.Name = user.WebUserName; //Display name&#xD;
	//user.PersonalFolderName -&gt; may be set to defined the personal folder name &#xD;
&#xD;
    //OR may come from Northwind: e.g. group=city coming from the employee table&#xD;
    //Note that we can also use the user name and password to connect to the database&#xD;
	//User=Fuller,Password=Andrew will return group Tacoma &#xD;
	string connectionString = "Server=qdoc.ecmxpert.com,14333;Database=KALIApplication;User Id=ko-db;Password=KandO@2020@@;";&#xD;
	DbConnection sqlConnection =  Helper.DbConnectionFromConnectionString(ConnectionType.MSSQLServer, connectionString);&#xD;
	sqlConnection.Open();&#xD;
	DbCommand command = sqlConnection.CreateCommand();&#xD;
    command.CommandText = string.Format("select * from QUserInfoes where UserName={0} and Password={1}", Helper.QuoteSingle(user.WebUserName), Helper.QuoteSingle(user.WebPassword));&#xD;
	object groupName = command.ExecuteScalar();&#xD;
	if (groupName != null &amp;&amp; groupName != DBNull.Value)&#xD;
	{&#xD;
        user.AddDefaultSecurityGroup();&#xD;
    }&#xD;
	else &#xD;
	{&#xD;
		user.Error = "User unknown from the database.";&#xD;
	}  &#xD;
}&#xD;
</Script><Parameters><SecurityParameter><Name>oledb_connection_string</Name><Value>Provider=SQLOLEDB.1;Persist Security Info=False;Initial Catalog=master;Data Source=(local)</Value></SecurityParameter></Parameters><Groups><SecurityGroup><Name>Default Group</Name><Folders><SecurityFolder /><SecurityFolder><Path>\System</Path><UseSubFolders>false</UseSubFolders><ExpandSubFolders>false</ExpandSubFolders></SecurityFolder></Folders><PersFolderRight>Reports</PersFolderRight><FoldersScript /><FolderDetailScript /><SqlModel>true</SqlModel><Weight>1</Weight><Culture /><StartupReport /></SecurityGroup><SecurityGroup><Name>Group (Execute)</Name><Folders><SecurityFolder><ManageFolder>false</ManageFolder><FolderRight>Execute</FolderRight></SecurityFolder></Folders><Weight>1</Weight><Culture /></SecurityGroup><SecurityGroup><Name>Group (Execute Output)</Name><Folders><SecurityFolder><Path>\Samples</Path><ManageFolder>false</ManageFolder><FolderRight>ExecuteReportOuput</FolderRight></SecurityFolder><SecurityFolder><Path>\System</Path><ManageFolder>false</ManageFolder><FolderRight>ExecuteReportOuput</FolderRight></SecurityFolder></Folders><Weight>1</Weight><Culture /></SecurityGroup><SecurityGroup><Name>Group (Schedule)</Name><Folders><SecurityFolder><ManageFolder>false</ManageFolder><FolderRight>Schedule</FolderRight></SecurityFolder></Folders><PersFolderRight>Files</PersFolderRight><Weight>1</Weight><Culture /></SecurityGroup><SecurityGroup><Name>Group (Edit)</Name><Folders><SecurityFolder /></Folders><PersFolderRight>Reports</PersFolderRight><Devices><SecurityDevice><Name>Folder Device</Name></SecurityDevice></Devices><Sources><SecuritySource><Name>RSS No SQL Source</Name></SecuritySource></Sources><Connections><SecurityConnection><Name>connection</Name></SecurityConnection></Connections><Columns><SecurityColumn><Source>Northwind</Source><Tag /><Category>Products</Category></SecurityColumn><SecurityColumn><Source>Northwind</Source><Tag /><Category>Customers</Category></SecurityColumn></Columns><Weight>1</Weight><Culture /></SecurityGroup><SecurityGroup><Name>Group (Demo)</Name><PersFolderRight>Reports</PersFolderRight><SqlModel>true</SqlModel><Weight>1</Weight></SecurityGroup><SecurityGroup><Name>Group (Scripts 1)</Name><FoldersScript>@{&#xD;
    SecurityUser user = Model;&#xD;
    //Full documentation at https://sealreport.org/Help/Index.html&#xD;
    &#xD;
    //Sample to define folders&#xD;
    user.Folders.Clear();&#xD;
    user.Folders.Add(new SWIFolder() { path = @"\Samples", name = "New Samples", right = 4, sql = true, manage = 0, expand = true });&#xD;
    user.Folders.Add(new SWIFolder() { path = @"\", name = "Root", right = 4, sql = true, manage = 0, expand = true });&#xD;
&#xD;
    SWIFolder sampleFolder = user.AllFolders.FirstOrDefault(i =&gt; i.path ==  @"\Samples");&#xD;
    if (sampleFolder != null) {&#xD;
        //Sample to add a subfolder&#xD;
        sampleFolder.folders.Add(new SWIFolder() { path = @"\System", name = "System in a sub-folder", right = 4, sql = false, manage = 0});&#xD;
        &#xD;
        //Sample to modify a folder&#xD;
        sampleFolder.name = "New Samples 2"; &#xD;
        sampleFolder.manage = 1; &#xD;
        sampleFolder.right = 4;&#xD;
        sampleFolder.sql = false;&#xD;
&#xD;
        //Sample to remove a folder&#xD;
        //sampleFolder.folders.RemoveAll(i =&gt; i.path == @"\System");&#xD;
    }&#xD;
}&#xD;
</FoldersScript><FolderDetailScript>@{&#xD;
    SecurityUser user = Model;&#xD;
    &#xD;
    //Full documentation at https://sealreport.org/Help/Index.html&#xD;
&#xD;
    if (user.FolderDetail.folder.path == @"\Samples") {&#xD;
        //Filter reports&#xD;
        user.FolderDetail.files.RemoveAll(i =&gt; !i.name.Contains("Charts")); &#xD;
        &#xD;
        //Sample to change a report &#xD;
        SWIFile file = user.FolderDetail.files.FirstOrDefault(i =&gt; i.name == "04-Charts Gallery - Basics");&#xD;
        if (file != null) {&#xD;
            file.name = "04-Charts Gallery - Basics NEW";&#xD;
            file.right = 1;&#xD;
        }&#xD;
    }&#xD;
    &#xD;
    if (user.FolderDetail.folder.path == @"\") {&#xD;
        //Sample to add a report &#xD;
        user.FolderDetail.files.Add(new SWIFile() { path=@"\Samples\04-Charts Gallery - Basics.srex", name="Charts from Root", last="", isreport=true, right=1}); &#xD;
    }&#xD;
}&#xD;
</FolderDetailScript><Weight>1</Weight></SecurityGroup><SecurityGroup><Name>Group (Scripts 2)</Name><PersFolderRight>Reports</PersFolderRight><FoldersScript>@{&#xD;
    SecurityUser user = Model;&#xD;
    //Full documentation at https://sealreport.org/Help/Index.html&#xD;
    //user.ScriptNumber is a number incremented if several scripts are executed&#xD;
    &#xD;
    //Sample add folders&#xD;
    user.Folders.Add(new SWIFolder() { path = @"\Samples\01-Tasks", name = "Tasks for User SC2", right = 4, sql = false, manage = 0});&#xD;
}&#xD;
</FoldersScript><FolderDetailScript>@{&#xD;
    SecurityUser user = Model;&#xD;
    //Full documentation at https://sealreport.org/Help/Index.html&#xD;
    //user.ScriptNumber is a number incremented if several scripts are executed&#xD;
&#xD;
    if (user.FolderDetail.folder.path == @"\System") {&#xD;
        user.FolderDetail.files.Add(new SWIFile() { path=@"\Samples\04-Charts Gallery - Basics.srex", name="Charts from System", last="", isreport=true, right=1}); &#xD;
    }&#xD;
&#xD;
    if (user.FolderDetail.folder.path == @"\") {&#xD;
        user.FolderDetail.files.RemoveAll(i =&gt; i.path != @"\Samples\04-Charts Gallery - Basics.srex"); &#xD;
    }&#xD;
}&#xD;
</FolderDetailScript><Weight>1</Weight></SecurityGroup><SecurityGroup><Name>Group (Menu)</Name><Folders><SecurityFolder><ManageFolder>false</ManageFolder><FolderRight>Execute</FolderRight></SecurityFolder></Folders><ShowFoldersView>false</ShowFoldersView><MenuScript>@{&#xD;
    SecurityUser user = Model;&#xD;
    //Full documentation at https://sealreport.org/Help/Index.html&#xD;
    //user.ScriptNumber is a number incremented if several scripts are executed&#xD;
&#xD;
    //Sample to define a menu&#xD;
    var reports = user.WebMenu.reports;&#xD;
    reports.Clear();&#xD;
    reports.Add(new SWIMenuItem() { path = @"\Samples\04-Charts Gallery - Basics.srex", viewGUID = null, outputGUID = null, name = "View Charts" });&#xD;
    // subMenu&#xD;
    var subMenu = new SWIMenuItem() { name = "A SubMenu" };&#xD;
    subMenu.items.Add(new SWIMenuItem() { path = @"\Search - Orders.srex", viewGUID = null, outputGUID = null, name = "Search" });&#xD;
    reports.Add(subMenu);&#xD;
    &#xD;
    //Clear recent reports&#xD;
    user.WebMenu.recentreports.Clear();&#xD;
}&#xD;
</MenuScript><Weight>1</Weight></SecurityGroup></Groups></SealSecurity>